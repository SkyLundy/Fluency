{"version":3,"file":"../fluency_module_config.bundle.js","sources":["fluency_module_config.bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar _FtAdminMenu = _interopRequireDefault(require(\"./ui/FtAdminMenu\"));\nvar _FtTranslationCacheControlButtons = _interopRequireDefault(require(\"./ui/FtTranslationCacheControlButtons\"));\nvar _FtTranslatableLanguagesCacheControlButtons = _interopRequireDefault(require(\"./ui/FtTranslatableLanguagesCacheControlButtons\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nwindow.addEventListener('load', e => {\n  _FtAdminMenu.default.init();\n  _FtTranslationCacheControlButtons.default.init();\n  _FtTranslatableLanguagesCacheControlButtons.default.init();\n});\n\n},{\"./ui/FtAdminMenu\":5,\"./ui/FtTranslatableLanguagesCacheControlButtons\":6,\"./ui/FtTranslationCacheControlButtons\":7}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtConfig = _interopRequireDefault(require(\"./FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Core module interface\n * Handles all interaction with the ProcessWire module backend\n * @return {object} Public interfaces\n */\n\nconst Fluency = function () {\n  /**\n   * Localized error strings\n   * @type {Object}\n   */\n  const errors = _FtConfig.default.getUiTextFor('errors');\n\n  /**\n   * Data Request Methods\n   */\n\n  /**\n   * Gets a translation from the Fluency module\n   * @param  {String}       sourceLanguage ISO language code\n   * @param  {String}       targetLanguage ISO langauge code\n   * @param  {String|Array} content        Content to translate\n   * @param  {Array}        options        Additional options\n   * @param  {Bool|null}         caching        Enable/disable caching\n   * @return {Promise}\n   */\n  const getTranslation = function (sourceLanguage, targetLanguage, content) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let caching = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    return postRequest(_FtConfig.default.getApiEndpointFor('translation'), {\n      sourceLanguage: sourceLanguage,\n      targetLanguage: targetLanguage,\n      content: content,\n      options: options,\n      caching: caching\n    }, response => {\n      return response;\n    });\n  };\n\n  /**\n   * Gets the current translation service API usage\n   * @return {Promise}\n   */\n  const getUsage = () => {\n    return getRequest(_FtConfig.default.getApiEndpointFor('usage'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Get all language available for translation. Provides source/target lists from the translation\n   * service API\n   * @return {Promise}\n   */\n  const getAvailableLanguages = () => {\n    return getRequest(_FtConfig.default.getApiEndpointFor('languages'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Clear all cached translations\n   * @return {Promise}\n   */\n  const deleteTranslationCache = () => {\n    return deleteRequest(_FtConfig.default.getApiEndpointFor('translationCache'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Clear cached list of translatable languages\n   * @return {Promise}\n   */\n  const deleteTranslatableLanguagesCache = () => {\n    return deleteRequest(_FtConfig.default.getApiEndpointFor('translatableLanguagesCache'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * HTTP Requests\n   */\n\n  /**\n   * Create headers for AJAX requests\n   * @return {Object}\n   */\n  const requestHeaders = requestType => {\n    const requestHeaders = {\n      'X-Requested-With': 'XMLHttpRequest'\n    };\n    if (requestType === 'GET') {\n      requestHeaders['Accept'] = 'application/json';\n    }\n    if (requestType === 'POST') {\n      requestHeaders['Content-Type'] = 'application/json';\n    }\n    return requestHeaders;\n  };\n\n  /**\n   * Executes a POST request to a given endpoint\n   * @param  {String}    endpoint URL for AJAX request\n   * @param  {Object}    data     Data for request\n   * @param  {Callable}  data     Function to handle response body\n   * @return {Promise}\n   */\n  const postRequest = (endpoint, data, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'POST',\n      cache: 'no-store',\n      headers: requestHeaders,\n      body: JSON.stringify(data)\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Executes a GET request to a given endpoint\n   * @param  {String}   endpoint        URL for AJAX request\n   * @param  {Callable} responseHandler Function to handle response body\n   * @return {Promise}\n   */\n  const getRequest = (endpoint, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: requestHeaders('GET')\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Executes a DELETE request to a given endpoint\n   * @param  {String}   endpoint        URL for AJAX request\n   * @param  {Callable} responseHandler Function to handle response body\n   * @return {Promise}\n   */\n  const deleteRequest = (endpoint, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'DELETE',\n      headers: requestHeaders('GET')\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Parses response\n   * @param  {Object} response Fluency API response\n   * @return {Object|Void}\n   * @throws Error\n   */\n  const parseResponse = response => {\n    if (response.status === 204) {\n      return response;\n    }\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error();\n  };\n\n  /**\n   * Parses and returns results for a fetch error\n   * These are network level errors that occur between ProcessWire and the hosting server\n   * Any translation or service errors will be located within the response body itself\n   * @param  {Error} error Fetch API error object\n   * @return {Object}\n   */\n  const handleFetchError = error => {\n    console.error('[Fluency module API failure]', error.message);\n    const returnObject = {\n      error: null,\n      message: null\n    };\n    switch (error.message.split(' ')[0]) {\n      case 'NetworkError':\n        returnObject.error = 'FLUENCY_CLIENT_DISCONNECTED';\n        returnObject.message = errors['FLUENCY_CLIENT_DISCONNECTED'];\n        break;\n      default:\n        returnObject.error = 'UNKNOWN_ERROR';\n        returnObject.message = errors['UNKNOWN_ERROR'];\n        break;\n    }\n    return returnObject;\n  };\n  return {\n    deleteTranslatableLanguagesCache,\n    deleteTranslationCache,\n    getAvailableLanguages,\n    getTranslation,\n    getUsage\n  };\n}();\nvar _default = Fluency;\nexports.default = _default;\n\n},{\"./FtConfig\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/**\n * This provides access methods to get module configuration values\n * @return {Object}  Public methods\n */\nconst FtConfig = function () {\n  // Public properties\n\n  const fieldInitializedAttr = 'data-ft-initialized';\n\n  // Private properties\n\n  /**\n   * Holds the data passed from the Fluency module\n   * @access Private\n   * @type {Object}\n   */\n  const config = ProcessWire.config.fluency;\n\n  /**\n   * All UI strings\n   * @type {Object}\n   */\n  const localizedStrings = config.localization;\n\n  /**\n   * Objects interface with the Fluency config object so that changes to the object\n   * structure from the back end do not break the UI. Use the public methods below\n   * to access ProcessWire.config.fluency properties and data\n   */\n\n  /**\n   * Localized strings keyed sets\n   * @type {Object}\n   */\n  const strings = {\n    activityOverlay: localizedStrings.activityOverlay,\n    languageSelect: localizedStrings.languageSelect,\n    inputfieldTranslateButtons: localizedStrings.inputfieldTranslateButtons,\n    standaloneTranslator: localizedStrings.standaloneTranslator,\n    usage: localizedStrings.usage,\n    errors: localizedStrings.errors\n  };\n\n  /**\n   * Fluency API keyed URLs\n   * @type {Object}\n   */\n  const endpoints = {\n    languages: config.apiEndpoints.languages,\n    translatableLanguagesCache: config.apiEndpoints.translatableLanguagesCache,\n    test: config.apiEndpoints.test,\n    translation: config.apiEndpoints.translation,\n    translationCache: config.apiEndpoints.translationCache,\n    usage: config.apiEndpoints.usage\n  };\n\n  /**\n   * Contains all of the Fluency configured langauges from the module\n   * @type {Array}\n   */\n  const configuredLanguages = config.configuredLanguages;\n\n  /**\n   * Contains an array of ProcessWire language IDs not configured in Fluency\n   * @type {Array}\n   */\n  const unconfiguredLanguages = config.unconfiguredLanguages;\n\n  // Public methods\n\n  /**\n   * Fluency REST API\n   */\n  const getApiEndpointFor = key => endpoints[key];\n\n  /**\n   * Languages\n   */\n\n  const getConfiguredLanguages = () => configuredLanguages;\n  const getDefaultLanguage = () => getConfiguredLanguages().reduce((defaultLang, lang) => lang.default ? lang : defaultLang, null);\n  const languageIsTranslatable = languageId => !getUnconfiguredLanguages().includes(parseInt(languageId, 10));\n  const getUnconfiguredLanguages = () => unconfiguredLanguages;\n  const getLanguageCount = () => getConfiguredLanguages().length + getUnconfiguredLanguages().length;\n  const getLanguageForId = pwLanguageId => {\n    pwLanguageId = parseInt(pwLanguageId, 10);\n    return getConfiguredLanguages().reduce((match, language) => language.id === pwLanguageId ? language : match, null);\n  };\n\n  /**\n   * Localization\n   */\n\n  const getUiTextFor = key => strings[key];\n\n  /**\n   * Module Configuration/State\n   */\n\n  const moduleShouldInitialize = () => getConfiguredLanguages().length > 1;\n  const getEngineInfo = () => config.engine;\n  const getEngineProvidesUsageData = () => getEngineInfo().providesUsageData;\n  return {\n    fieldInitializedAttr,\n    getApiEndpointFor,\n    getConfiguredLanguages,\n    getDefaultLanguage,\n    getEngineInfo,\n    getEngineProvidesUsageData,\n    getLanguageCount,\n    getLanguageForId,\n    getUiTextFor,\n    getUnconfiguredLanguages,\n    languageIsTranslatable,\n    moduleShouldInitialize\n  };\n}();\nvar _default = FtConfig;\nexports.default = _default;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtConfig = _interopRequireDefault(require(\"../global/FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Creates, inserts, and controls the actions the activity overlay for the provided\n * targetContainer\n * @param {object} targetContainer An instantiated object for an inputfield or fieldset\n * @param {string} type       The type of activity for this overlay. 'translate' or 'update'\n */\nconst FtActivityOverlay = function (targetContainer) {\n  var _this = this;\n  let activityType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'translating';\n  const elClasses = {\n    parent: 'ft-activity-overlay-container',\n    overlay: 'ft-activity-overlay',\n    error: 'error',\n    message: 'message',\n    flash: 'flash',\n    success: 'success',\n    activity: 'activity',\n    visible: 'visible',\n    activityContainer: 'ft-activity',\n    activityStaticText: 'ft-activity-text',\n    activityAnimationContainer: 'ft-activity-animation-container',\n    activityAnimationItem: 'ft-activity-animation-item',\n    messageContainer: 'ft-activity-message'\n  };\n\n  /**\n   * Will contain the activityOverlay Element for this targetContainer\n   * @type {Element}\n   */\n  let activityOverlay;\n\n  /**\n   * Will contain the message Element for this targetContainer's activityOverlay\n   * @type {Element}\n   */\n  let messageContainer;\n\n  /**\n   * Will contain the animation container Element for this targetContainer's activityOverlay\n   * @type {Element}\n   */\n  let activityContainer;\n\n  /**\n   * Control Methods\n   */\n\n  /**\n   * This shows the overlay's activity animation that was created at instantiation\n   * Must be manually hidden with the hide() method\n   *\n   * @return {void}\n   */\n  this.showActivity = () => {\n    this.setActivityActive();\n    this.setOverlayVisible();\n  };\n\n  /**\n   * Shows a message in the overlay (neutral background)\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {void}\n   */\n  this.showMessage = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5000;\n    _this.setMessageContent(message);\n    _this.setActivityInactive();\n    _this.setMessageActive();\n    _this.setOverlayVisible();\n    _this.hide(displayTime);\n  };\n\n  /**\n   * Shows a success message (success color background)\n   *\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {[type]}             [description]\n   */\n  this.flashSuccess = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    _this.setSuccessActive();\n    _this.setFlashActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Shows a success message (error color background)\n   *\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {[type]}             [description]\n   */\n  this.flashError = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    _this.setFlashActive();\n    _this.setErrorActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Shows an error message in a visible overlay (error background)\n   *\n   * @param  {String} message     Message to show in overlay error\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {void}\n   */\n  this.showError = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 7000;\n    _this.setErrorActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Hide an overlay immediately or after a preset amount of time\n   *\n   * @param {Number} delay Length of time in ms before hiding overlay\n   */\n  this.hide = function () {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    setTimeout(() => {\n      _this.setOverlayInvisible();\n    }, delay);\n\n    // Ensures the animation is finished before modifying content\n    setTimeout(() => {\n      _this.setActivityInactive();\n      _this.setMessageInactive();\n      _this.setErrorInactive();\n      _this.setFlashInactive();\n      _this.setMessageContent('');\n    }, delay + 500);\n  };\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Shows the activity element\n   *\n   * @access Private\n   */\n  this.setActivityActive = () => {\n    activityOverlay.classList.add(elClasses.activity);\n  };\n\n  /**\n   * Hides the activity element\n   *\n   * @access Private\n   */\n  this.setActivityInactive = () => {\n    activityOverlay.classList.remove(elClasses.activity);\n  };\n\n  /**\n   * Shows the message element\n   *\n   * @access Private\n   */\n  this.setMessageActive = () => {\n    activityOverlay.classList.add(elClasses.message);\n  };\n\n  /**\n   * Hides the activity element\n   *\n   * @access Private\n   */\n  this.setMessageInactive = () => {\n    activityOverlay.classList.remove(elClasses.message);\n  };\n\n  /**\n   * Sets the content of the overlay message\n   *\n   * @access Private\n   */\n  this.setMessageContent = content => {\n    messageContainer.innerText = content;\n  };\n\n  /**\n   * Adds flashing overlay behavior\n   *\n   * @access Private\n   */\n  this.setFlashActive = content => {\n    activityOverlay.classList.add(elClasses.flash);\n  };\n\n  /**\n   * removes flashing overlay behavior\n   *\n   * @access Private\n   */\n  this.setFlashInactive = content => {\n    activityOverlay.classList.remove(elClasses.flash);\n  };\n\n  /**\n   * Sets message to success\n   *\n   * @access Private\n   */\n  this.setSuccessActive = () => {\n    activityOverlay.classList.add(elClasses.success);\n  };\n\n  /**\n   * Unsets message error\n   *\n   * @access Private\n   */\n  this.setSuccessInactive = () => {\n    activityOverlay.classList.remove(elClasses.success);\n  };\n\n  /**\n   * Sets message to error\n   *\n   * @access Private\n   */\n  this.setErrorActive = () => {\n    activityOverlay.classList.add(elClasses.error);\n  };\n\n  /**\n   * Unsets message error\n   *\n   * @access Private\n   */\n  this.setErrorInactive = () => {\n    activityOverlay.classList.remove(elClasses.error);\n  };\n\n  /**\n   * Shows this activity overlay\n   *\n   * @access Private\n   */\n  this.setOverlayVisible = () => {\n    activityOverlay.classList.add(elClasses.visible);\n  };\n  this.setOverlayInvisible = () => {\n    activityOverlay.classList.remove(elClasses.visible);\n  };\n\n  /**\n   * Creates and returns an activity overlay element\n   *\n   * @return {HTMLElement}\n   */\n  this.create = () => {\n    activityOverlay = this.buildOverlayEl();\n    activityContainer = this.buildActivityEl();\n    messageContainer = this.buildMessageEl();\n    activityOverlay.appendChild(activityContainer);\n    activityOverlay.appendChild(messageContainer);\n    return activityOverlay;\n  };\n\n  /**\n   * Creates the parent overlay element\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildOverlayEl = () => {\n    const overlay = document.createElement('div');\n\n    // overlay.setAttribute('data-gradient-1', 'rgba(62, 185, 152, .85)');\n    overlay.setAttribute('class', elClasses.overlay);\n    return overlay;\n  };\n\n  /**\n   * Creates container for animation and contents of animation\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildActivityEl = () => {\n    let text = _FtConfig.default.getUiTextFor('activityOverlay')[activityType];\n    let activityAnimationContainer = document.createElement('div');\n    activityAnimationContainer.setAttribute('class', elClasses.activityAnimationContainer);\n\n    // Add all animation items to the animation container\n    activityAnimationContainer = text.animated.reduce((el, string) => {\n      let activityText = document.createElement('span');\n\n      // Add text items\n      activityText.setAttribute('class', elClasses.activityAnimationItem);\n      activityText.innerHTML = string;\n      el.appendChild(activityText);\n      return el;\n    }, activityAnimationContainer);\n\n    // Create static text element\n    let staticText = document.createElement('div');\n    staticText.setAttribute('class', elClasses.activityStaticText);\n    staticText.innerText = text.static;\n\n    // Create activity container and append children\n    activityContainer = document.createElement('div');\n    activityContainer.setAttribute('class', elClasses.activityContainer);\n    activityContainer.appendChild(staticText);\n    activityContainer.appendChild(activityAnimationContainer);\n    return activityContainer;\n  };\n\n  /**\n   * Builds the element that will hold messages in the overlay\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildMessageEl = () => {\n    messageContainer = document.createElement('div');\n    messageContainer.setAttribute('class', elClasses.messageContainer);\n    return messageContainer;\n  };\n  (() => {\n    const targetContainerContainer = targetContainer.getSelf();\n    activityOverlay = this.create();\n    targetContainerContainer.classList.add(elClasses.parent);\n    targetContainerContainer.appendChild(activityOverlay);\n  })();\n};\nvar _default = FtActivityOverlay;\nexports.default = _default;\n\n},{\"../global/FtConfig\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/**\n * Handles modifying the Fluency menu item\n * @return {object} Public methods\n */\nconst FtAdminMenu = function () {\n  /**\n   * Initializes module\n   * @return {void}\n   */\n  const init = () => {\n    convertFtAdminMenuToModal();\n  };\n\n  /**\n   * Finds and converts the Translation admin menu item to open in a modal\n   * rather than navigating to the page.\n   * @return {void}\n   */\n  const convertFtAdminMenuToModal = () => {\n    const adminNavItems = document.querySelectorAll('.pw-masthead .pw-primary-nav > li > a'),\n      urlParams = new URLSearchParams(window.location.search);\n\n    // We don't want to modify this menu item if we are on the Fluency config page\n    // because the modal behavior is not available\n    if (urlParams.get('name') === 'Fluency') {\n      return false;\n    }\n    adminNavItems.forEach((el, i) => {\n      let hrefSegments = el.href.split('/').filter(Boolean);\n      if (hrefSegments[hrefSegments.length - 1].includes('fluency')) {\n        el.href = el.href + '?modal=1';\n        el.classList.add('pw-modal-large');\n        el.classList.add('pw-modal');\n      }\n    });\n  };\n  return {\n    init: init\n  };\n}();\nvar _default = FtAdminMenu;\nexports.default = _default;\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Fluency = _interopRequireDefault(require(\"../global/Fluency\"));\nvar _FtActivityOverlay = _interopRequireDefault(require(\"./FtActivityOverlay\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Binds all instances of buttons that clear the translatable languages cache\n *\n * @return {object}Public methods\n */\nconst FtTranslatableLanguageCacheControlButtons = function () {\n  /**\n   * Initializes this module\n   * @return {void}\n   */\n  const init = () => {\n    const clearCacheButtons = [...document.querySelectorAll('.js-ft-clear-translatable-languages-cache')];\n    if (clearCacheButtons.length) {\n      for (let button of clearCacheButtons) {\n        new clearCacheButton(button);\n      }\n    }\n  };\n  return {\n    init\n  };\n}();\nconst clearCacheButton = function (button) {\n  /**\n   * The button containing Inputfield element\n   * @type {Element}\n   */\n  let inputfield = null;\n\n  /**\n   * @type {FtActivityOverlay}\n   */\n  let activityOverlay = null;\n  this.getSelf = () => inputfield;\n  this.bindEventListener = () => {\n    const notes = this.getSelf().querySelector('.notes');\n    button.addEventListener('click', e => {\n      e.preventDefault();\n      activityOverlay.showActivity();\n      _Fluency.default.deleteTranslatableLanguagesCache().then(result => {\n        if (result.error) {\n          activityOverlay.showError(result.detail);\n          return;\n        }\n\n        // Reset count in notes\n        if (notes) {\n          notes.textContent = 'There are no languages cached';\n        }\n        activityOverlay.hide();\n      });\n    });\n  };\n  (() => {\n    inputfield = button.closest('.Inputfields').parentElement;\n    activityOverlay = new _FtActivityOverlay.default(this, 'clearingCache');\n    this.bindEventListener();\n  })();\n};\nvar _default = FtTranslatableLanguageCacheControlButtons;\nexports.default = _default;\n\n},{\"../global/Fluency\":2,\"./FtActivityOverlay\":4}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Fluency = _interopRequireDefault(require(\"../global/Fluency\"));\nvar _FtActivityOverlay = _interopRequireDefault(require(\"./FtActivityOverlay\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Binds all instances of buttons that clear translation cache\n * @return {object}     Public methods\n */\nconst FtTranslationCacheControlButtons = function () {\n  /**\n   * Initializes this module\n   * @return {void}\n   */\n  const init = () => {\n    const clearCacheButtons = [...document.querySelectorAll('.js-ft-clear-translation-cache')];\n    if (clearCacheButtons.length) {\n      for (let button of clearCacheButtons) {\n        new clearCacheButton(button);\n      }\n    }\n  };\n  return {\n    init\n  };\n}();\nconst clearCacheButton = function (button) {\n  /**\n   * The button containing Inputfield element\n   * @type {Element}\n   */\n  let inputfield = null;\n\n  /**\n   * @type {FtActivityOverlay}\n   */\n  let activityOverlay = null;\n  this.getSelf = () => inputfield;\n  this.bindEventListener = () => {\n    const notes = this.getSelf().querySelector('.notes');\n    button.addEventListener('click', e => {\n      e.preventDefault();\n      activityOverlay.showActivity();\n      _Fluency.default.deleteTranslationCache().then(result => {\n        if (result.error) {\n          activityOverlay.showError(result.detail);\n          return;\n        }\n\n        // Reset count in notes\n        if (notes) {\n          notes.textContent = notes.textContent.split(': ')[0] + ': 0';\n        }\n        activityOverlay.hide();\n      });\n    });\n  };\n  (() => {\n    inputfield = button.closest('.Inputfields').parentElement;\n    activityOverlay = new _FtActivityOverlay.default(this, 'clearingCache');\n    this.bindEventListener();\n  })();\n};\nvar _default = FtTranslationCacheControlButtons;\nexports.default = _default;\n\n},{\"../global/Fluency\":2,\"./FtActivityOverlay\":4}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_FtAdminMenu","_interopRequireDefault","_FtTranslationCacheControlButtons","_FtTranslatableLanguagesCacheControlButtons","obj","__esModule","default","window","addEventListener","init","./ui/FtAdminMenu","./ui/FtTranslatableLanguagesCacheControlButtons","./ui/FtTranslationCacheControlButtons","2","Object","defineProperty","value","_FtConfig","Fluency","errors","getUiTextFor","requestHeaders","requestType","X-Requested-With","getRequest","endpoint","responseHandler","fetch","method","cache","headers","then","parseResponse","catch","handleFetchError","deleteRequest","response","status","ok","json","error","console","message","returnObject","split","deleteTranslatableLanguagesCache","getApiEndpointFor","deleteTranslationCache","getAvailableLanguages","getTranslation","sourceLanguage","targetLanguage","content","let","options","arguments","undefined","caching","data","body","JSON","stringify","getUsage","./FtConfig","3","FtConfig","config","ProcessWire","fluency","localizedStrings","localization","strings","activityOverlay","languageSelect","inputfieldTranslateButtons","standaloneTranslator","usage","endpoints","languages","apiEndpoints","translatableLanguagesCache","test","translation","translationCache","configuredLanguages","unconfiguredLanguages","getConfiguredLanguages","getUnconfiguredLanguages","getEngineInfo","engine","fieldInitializedAttr","key","getDefaultLanguage","reduce","defaultLang","lang","getEngineProvidesUsageData","providesUsageData","getLanguageCount","getLanguageForId","pwLanguageId","parseInt","match","language","id","languageIsTranslatable","languageId","includes","moduleShouldInitialize","4","targetContainer","_this","this","activityType","elClasses","parent","overlay","flash","success","activity","visible","activityContainer","activityStaticText","activityAnimationContainer","activityAnimationItem","messageContainer","showActivity","setActivityActive","setOverlayVisible","showMessage","displayTime","setMessageContent","setActivityInactive","setMessageActive","hide","flashSuccess","setSuccessActive","setFlashActive","flashError","setErrorActive","showError","delay","setTimeout","setOverlayInvisible","setMessageInactive","setErrorInactive","setFlashInactive","classList","add","remove","innerText","setSuccessInactive","create","buildOverlayEl","buildActivityEl","buildMessageEl","appendChild","document","createElement","setAttribute","text","animated","el","string","activityText","innerHTML","staticText","static","targetContainerContainer","getSelf","../global/FtConfig","5","convertFtAdminMenuToModal","adminNavItems","querySelectorAll","urlParams","URLSearchParams","location","search","get","forEach","hrefSegments","href","filter","Boolean","6","_Fluency","_FtActivityOverlay","clearCacheButton","button","inputfield","bindEventListener","notes","querySelector","preventDefault","result","detail","textContent","closest","parentElement","clearCacheButtons","../global/Fluency","./FtActivityOverlay","7"],"mappings":"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"}