{"version":3,"file":"../fluency_language_translator.bundle.js","sources":["fluency_language_translator.bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar _FtLanguageTranslatorInputfields = _interopRequireDefault(require(\"./inputfields/FtLanguageTranslatorInputfields\"));\nvar _FtConfig = _interopRequireDefault(require(\"./global/FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nwindow.addEventListener('load', e => {\n  if (_FtConfig.default.moduleShouldInitialize()) {\n    _FtLanguageTranslatorInputfields.default.init();\n  }\n});\n\n},{\"./global/FtConfig\":3,\"./inputfields/FtLanguageTranslatorInputfields\":4}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtConfig = _interopRequireDefault(require(\"./FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Core module interface\n * Handles all interaction with the ProcessWire module backend\n * @return {object} Public interfaces\n */\n\nconst Fluency = function () {\n  /**\n   * Localized error strings\n   * @type {Object}\n   */\n  const errors = _FtConfig.default.getUiTextFor('errors');\n\n  /**\n   * Data Request Methods\n   */\n\n  /**\n   * Gets a translation from the Fluency module\n   * @param  {String}       sourceLanguage ISO language code\n   * @param  {String}       targetLanguage ISO langauge code\n   * @param  {String|Array} content        Content to translate\n   * @param  {Array}        options        Additional options\n   * @param  {Bool|null}         caching        Enable/disable caching\n   * @return {Promise}\n   */\n  const getTranslation = function (sourceLanguage, targetLanguage, content) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let caching = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    return postRequest(_FtConfig.default.getApiEndpointFor('translation'), {\n      sourceLanguage: sourceLanguage,\n      targetLanguage: targetLanguage,\n      content: content,\n      options: options,\n      caching: caching\n    }, response => {\n      return response;\n    });\n  };\n\n  /**\n   * Gets the current translation service API usage\n   * @return {Promise}\n   */\n  const getUsage = () => {\n    return getRequest(_FtConfig.default.getApiEndpointFor('usage'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Get all language available for translation. Provides source/target lists from the translation\n   * service API\n   * @return {Promise}\n   */\n  const getAvailableLanguages = () => {\n    return getRequest(_FtConfig.default.getApiEndpointFor('languages'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Clear all cached translations\n   * @return {Promise}\n   */\n  const deleteTranslationCache = () => {\n    return deleteRequest(_FtConfig.default.getApiEndpointFor('translationCache'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Clear cached list of translatable languages\n   * @return {Promise}\n   */\n  const deleteTranslatableLanguagesCache = () => {\n    return deleteRequest(_FtConfig.default.getApiEndpointFor('translatableLanguagesCache'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * HTTP Requests\n   */\n\n  /**\n   * Create headers for AJAX requests\n   * @return {Object}\n   */\n  const requestHeaders = requestType => {\n    const requestHeaders = {\n      'X-Requested-With': 'XMLHttpRequest'\n    };\n    if (requestType === 'GET') {\n      requestHeaders['Accept'] = 'application/json';\n    }\n    if (requestType === 'POST') {\n      requestHeaders['Content-Type'] = 'application/json';\n    }\n    return requestHeaders;\n  };\n\n  /**\n   * Executes a POST request to a given endpoint\n   * @param  {String}    endpoint URL for AJAX request\n   * @param  {Object}    data     Data for request\n   * @param  {Callable}  data     Function to handle response body\n   * @return {Promise}\n   */\n  const postRequest = (endpoint, data, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'POST',\n      cache: 'no-store',\n      headers: requestHeaders,\n      body: JSON.stringify(data)\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Executes a GET request to a given endpoint\n   * @param  {String}   endpoint        URL for AJAX request\n   * @param  {Callable} responseHandler Function to handle response body\n   * @return {Promise}\n   */\n  const getRequest = (endpoint, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: requestHeaders('GET')\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Executes a DELETE request to a given endpoint\n   * @param  {String}   endpoint        URL for AJAX request\n   * @param  {Callable} responseHandler Function to handle response body\n   * @return {Promise}\n   */\n  const deleteRequest = (endpoint, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'DELETE',\n      headers: requestHeaders('GET')\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Parses response\n   * @param  {Object} response Fluency API response\n   * @return {Object|Void}\n   * @throws Error\n   */\n  const parseResponse = response => {\n    if (response.status === 204) {\n      return response;\n    }\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error();\n  };\n\n  /**\n   * Parses and returns results for a fetch error\n   * These are network level errors that occur between ProcessWire and the hosting server\n   * Any translation or service errors will be located within the response body itself\n   * @param  {Error} error Fetch API error object\n   * @return {Object}\n   */\n  const handleFetchError = error => {\n    console.error('[Fluency module API failure]', error.message);\n    const returnObject = {\n      error: null,\n      message: null\n    };\n    switch (error.message.split(' ')[0]) {\n      case 'NetworkError':\n        returnObject.error = 'FLUENCY_CLIENT_DISCONNECTED';\n        returnObject.message = errors['FLUENCY_CLIENT_DISCONNECTED'];\n        break;\n      default:\n        returnObject.error = 'UNKNOWN_ERROR';\n        returnObject.message = errors['UNKNOWN_ERROR'];\n        break;\n    }\n    return returnObject;\n  };\n  return {\n    deleteTranslatableLanguagesCache,\n    deleteTranslationCache,\n    getAvailableLanguages,\n    getTranslation,\n    getUsage\n  };\n}();\nvar _default = Fluency;\nexports.default = _default;\n\n},{\"./FtConfig\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/**\n * This provides access methods to get module configuration values\n * @return {Object}  Public methods\n */\nconst FtConfig = function () {\n  // Public properties\n\n  const fieldInitializedAttr = 'data-ft-initialized';\n  const translationActionTypes = {\n    each: 'translate_each_language',\n    all: 'translate_to_all_languages',\n    both: 'both'\n  };\n\n  // Private properties\n\n  /**\n   * Holds the data passed from the Fluency module\n   * @access Private\n   * @type {Object}\n   */\n  const config = ProcessWire.config.fluency;\n\n  /**\n   * All UI strings\n   * @type {Object}\n   */\n  const localizedStrings = config.localization;\n\n  /**\n   * Classes for elements created in UI\n   * @type {Object}\n   */\n  const elementClasses = {\n    translateButton: {\n      container: 'ft-translate-button-container',\n      button: 'ft-translate-button'\n    },\n    translateAllButton: {\n      container: 'Inputfield InputfieldHeaderHidden',\n      content: 'InputfieldContent',\n      button: 'ft-translate-all-button'\n    },\n    statusPlaceholder: {\n      container: 'ft-translation-status-container',\n      label: 'ft-translation-status'\n    },\n    icon: 'ft-icon'\n  };\n\n  /**\n   * Objects interface with the Fluency config object so that changes to the object\n   * structure from the back end do not break the UI. Use the public methods below\n   * to access ProcessWire.config.fluency properties and data\n   */\n\n  /**\n   * Localized strings keyed sets\n   * @type {Object}\n   */\n  const strings = {\n    activityOverlay: localizedStrings.activityOverlay,\n    languageSelect: localizedStrings.languageSelect,\n    inputfieldTranslateButtons: localizedStrings.inputfieldTranslateButtons,\n    standaloneTranslator: localizedStrings.standaloneTranslator,\n    usage: localizedStrings.usage,\n    errors: localizedStrings.errors,\n    languageTranslator: localizedStrings.languageTranslator\n  };\n\n  /**\n   * Fluency API keyed URLs\n   * @type {Object}\n   */\n  const endpoints = {\n    languages: config.apiEndpoints.languages,\n    translatableLanguagesCache: config.apiEndpoints.translatableLanguagesCache,\n    test: config.apiEndpoints.test,\n    translation: config.apiEndpoints.translation,\n    translationCache: config.apiEndpoints.translationCache,\n    usage: config.apiEndpoints.usage\n  };\n\n  /**\n   * Contains all of the Fluency configured langauges from the module\n   * @type {Array}\n   */\n  const configuredLanguages = config.configuredLanguages;\n\n  /**\n   * Contains an array of ProcessWire language IDs not configured in Fluency\n   * @type {Array}\n   */\n  const unconfiguredLanguages = config.unconfiguredLanguages;\n\n  // Public methods\n\n  /**\n   * Fluency REST API\n   */\n  const getApiEndpointFor = key => endpoints[key];\n\n  /**\n   * Languages\n   */\n\n  /**\n   * Get all configured languages\n   * @return {object}\n   */\n  const getConfiguredLanguages = () => configuredLanguages;\n\n  /**\n   * Returns ProcessWire's default language\n   * @return {object}\n   */\n  const getDefaultLanguage = () => getConfiguredLanguages().reduce((defaultLang, lang) => lang.default ? lang : defaultLang, null);\n\n  /**\n   * Determines if the language with a given ProcessWire ID can be translated\n   * @param  {int|string} languageId ProcessWire language ID\n   * @return {bool}\n   */\n  const languageIsTranslatable = languageId => !getUnconfiguredLanguages().includes(parseInt(languageId, 10));\n\n  /**\n   * Get all languages not configured in Fluency\n   * @return {object}\n   */\n  const getUnconfiguredLanguages = () => unconfiguredLanguages;\n\n  /**\n   * Gets total count of configured and unconfigured languages\n   * @return {int}\n   */\n  const getLanguageCount = () => getConfiguredLanguages().length + getUnconfiguredLanguages().length;\n\n  /**\n   * Get a configured language by it's ProcessWire ID\n   * @param  {string|int} pwLanguageId ProcessWire language ID\n   * @return {object}\n   */\n  const getLanguageForId = pwLanguageId => {\n    pwLanguageId = parseInt(pwLanguageId, 10);\n    return getConfiguredLanguages().reduce((match, language) => language.id === pwLanguageId ? language : match, null);\n  };\n\n  /**\n   * Localization\n   */\n\n  /**\n   * Accessor method for localized UI strings\n   * @param  {string} key Object key\n   * @return {string}\n   */\n  const getUiTextFor = key => strings[key];\n\n  /**\n   * Module Configuration/State\n   */\n\n  /**\n   * Determines if Fluency JS should initialize based on whether languages have\n   * been configured\n   * @return {bool}\n   */\n  const moduleShouldInitialize = () => getConfiguredLanguages().length > 1;\n\n  /**\n   * Returns the translation engine config object for the engine configured in Fluency\n   * @return {object|null}\n   */\n  const getEngineInfo = () => config.engine;\n\n  /**\n   * Does this engine provide usage data?\n   * @return {bool}\n   */\n  const getEngineProvidesUsageData = () => getEngineInfo().providesUsageData;\n\n  /**\n   * Gets the type of translation action chosen in the Flunecy module config\n   * @return {string}\n   */\n  const getTranslationAction = () => config.interface.inputfieldTranslationAction;\n\n  /**\n   * The attribute added to individual field elements where translation has been disabled\n   * @return {string}\n   */\n  const getTranslationDisabledFieldAttribute = () => `[${config.interface.translationDisabledFieldAttr}]`;\n\n  /**\n   * Class names added to UI components\n   * @param  {string} element The type of component\n   * @return {string}\n   */\n  const getElementClassesFor = element => elementClasses[element];\n  return {\n    fieldInitializedAttr,\n    getApiEndpointFor,\n    getConfiguredLanguages,\n    getDefaultLanguage,\n    getElementClassesFor,\n    getEngineInfo,\n    getEngineProvidesUsageData,\n    getLanguageCount,\n    getLanguageForId,\n    getTranslationAction,\n    getTranslationDisabledFieldAttribute,\n    getUiTextFor,\n    getUnconfiguredLanguages,\n    languageIsTranslatable,\n    moduleShouldInitialize,\n    translationActionTypes\n  };\n}();\nvar _default = FtConfig;\nexports.default = _default;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtActivityOverlay = _interopRequireDefault(require(\"../ui/FtActivityOverlay\"));\nvar _FtUiElements = _interopRequireDefault(require(\"../ui/FtUiElements\"));\nvar _FtConfig = _interopRequireDefault(require(\"../global/FtConfig\"));\nvar _Fluency = _interopRequireDefault(require(\"../global/Fluency\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Used for creating translation function for ProcessWire's core language translation pages\n *\n * @return {Object} Public methods\n */\nconst FtLanguageTranslatorInputfields = function () {\n  /**\n   * Initialize\n   * @return {void}\n   */\n  const init = () => {\n    initFields();\n    initTranslateAllButton();\n  };\n\n  /**\n   * Initializes per-field translation triggers\n   * @return {void}\n   */\n  const initFields = () => {\n    const translationInputfields = document.querySelectorAll('.InputfieldContent');\n    if (!translationInputfields) {\n      return;\n    }\n    [...translationInputfields].forEach(inputfield => {\n      if (inputfield.querySelector('input.translatable, textarea.translatable')) {\n        new LanguageTranslatorInputfield(inputfield);\n      }\n    });\n  };\n  const initTranslateAllButton = () => {\n    const container = document.querySelector('.Inputfields');\n    new AllInputfieldTranslator(container);\n  };\n  return {\n    init\n  };\n}();\n\n/**\n * Creates and binds the translate all button\n */\nconst AllInputfieldTranslator = function (inputfields) {\n  let activityOverlay;\n  let sourceTargetMap = [];\n  this.getSelf = () => inputfields;\n  this.getActivityOverlay = () => activityOverlay;\n  this.addTranslateButton = () => {\n    const {\n      button,\n      container\n    } = _FtUiElements.default.createTranslateAllButton();\n    this.bindTranslateButton(button);\n    document.querySelector('.Inputfields').insertAdjacentElement('afterbegin', container);\n  };\n  this.bindTranslateButton = button => {\n    button.addEventListener('click', e => {\n      e.preventDefault();\n      this.translateContent();\n    });\n  };\n\n  /**\n   * This chunks the sourceTargetElement array into an array of smaller arrays that can be\n   * handled by the translation service\n   * @return {array} Array of arrays containing content/inputs\n   */\n  this.getGroupedContentForTranslation = () => {\n    const perChunk = 40; // groups per chunk\n\n    return sourceTargetMap.reduce((chunks, item, index) => {\n      const chunkIndex = Math.floor(index / perChunk);\n      if (!chunks[chunkIndex]) {\n        chunks[chunkIndex] = []; // start a new chunk\n      }\n\n      chunks[chunkIndex].push(item);\n      return chunks;\n    }, []);\n  };\n\n  /**\n   * Translates all fields in chunks\n   * @return {void}\n   */\n  this.translateContent = () => {\n    const translationGroups = this.getGroupedContentForTranslation();\n    activityOverlay.showActivity();\n    let groupsToTranslate = translationGroups.length;\n    const urlParams = new URLSearchParams(window.location.search);\n    const id = parseInt(urlParams.get('language_id'));\n    let errorOccurred = false;\n    translationGroups.forEach((translationGroup, i) => {\n      // Stop trying if something went wrong\n      if (errorOccurred) {\n        return;\n      }\n      _Fluency.default.getTranslation(_FtConfig.default.getDefaultLanguage().engineLanguage.sourceCode, _FtConfig.default.getLanguageForId(id).engineLanguage.targetCode, translationGroup.map(sourceTarget => sourceTarget.text)).then(result => {\n        // Handle an error\n        if (result.error) {\n          if (!errorOccurred) {\n            activityOverlay.showError(result.message);\n            errorOccurred = true;\n          }\n          return;\n        }\n        const translations = result.translations;\n        if (translationGroup.length !== translations.length) {\n          activityOverlay.showError('Error');\n          errorOccurred = true;\n          return;\n        }\n        for (let i = 0; i < translations.length; i++) {\n          translationGroup[i].input.value = translations[i];\n        }\n      }).then(result => {\n        groupsToTranslate--;\n        if (groupsToTranslate === 0 && !errorOccurred) {\n          activityOverlay.hide();\n        }\n      });\n    });\n  };\n\n  /**\n   * Push all source text and target inputs to array that can be translated in bulk\n   * @return {void}\n   */\n  this.mapSourceTargetElements = () => {\n    [...document.querySelectorAll('.InputfieldContent')].forEach(inputfield => {\n      const description = inputfield.querySelector('.description');\n      const targetInput = inputfield.querySelector('input.translatable, textarea.translatable');\n      if (targetInput && description && description.innerText) {\n        sourceTargetMap.push({\n          text: description.innerText,\n          input: targetInput\n        });\n      }\n    });\n  };\n  (() => {\n    activityOverlay = new _FtActivityOverlay.default(this);\n    this.mapSourceTargetElements();\n    this.addTranslateButton();\n  })();\n};\nconst LanguageTranslatorInputfield = function (inputfieldContainer) {\n  /**\n   * Gets all localized strings from the FluencyConfig object\n   * These do nothing on their own and must be bound with any behavior after creation\n   *\n   * @type {object}\n   */\n  const uiText = _FtConfig.default.getUiTextFor('inputfieldTranslateButtons');\n  let activityOverlay;\n  let sourceText = inputfieldContainer.querySelector('.description').innerText;\n  let targetInput = inputfieldContainer.querySelector('input, textarea');\n  this.getSelf = () => inputfieldContainer;\n  this.getActivityOverlay = () => activityOverlay;\n  this.addTranslateButton = () => {\n    const {\n      button,\n      container\n    } = _FtUiElements.default.createTranslateButton(uiText.translate);\n    this.bindTranslateButton(button);\n    inputfieldContainer.appendChild(container);\n  };\n  this.bindTranslateButton = button => {\n    button.addEventListener('click', e => {\n      e.preventDefault();\n      this.translateContent();\n    });\n  };\n  this.translateContent = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const id = parseInt(urlParams.get('language_id'));\n    activityOverlay.showActivity();\n    _Fluency.default.getTranslation(_FtConfig.default.getDefaultLanguage().engineLanguage.sourceCode, _FtConfig.default.getLanguageForId(id).engineLanguage.targetCode, sourceText).then(result => {\n      if (result.error) {\n        activityOverlay.showError(result.message);\n        return;\n      }\n      targetInput.value = result.translations[0];\n      activityOverlay.hide();\n    });\n  };\n  (() => {\n    activityOverlay = new _FtActivityOverlay.default(this);\n    this.addTranslateButton();\n  })();\n};\nvar _default = FtLanguageTranslatorInputfields;\nexports.default = _default;\n\n},{\"../global/Fluency\":2,\"../global/FtConfig\":3,\"../ui/FtActivityOverlay\":5,\"../ui/FtUiElements\":6}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtConfig = _interopRequireDefault(require(\"../global/FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Creates, inserts, and controls the actions the activity overlay for the provided\n * targetContainer\n * @param {object} targetContainer An instantiated object for an inputfield or fieldset\n * @param {string} type       The type of activity for this overlay. 'translate' or 'update'\n */\nconst FtActivityOverlay = function (targetContainer) {\n  var _this = this;\n  let activityType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'translating';\n  const elClasses = {\n    parent: 'ft-activity-overlay-container',\n    overlay: 'ft-activity-overlay',\n    error: 'error',\n    message: 'message',\n    flash: 'flash',\n    success: 'success',\n    activity: 'activity',\n    visible: 'visible',\n    activityContainer: 'ft-activity',\n    activityStaticText: 'ft-activity-text',\n    activityAnimationContainer: 'ft-activity-animation-container',\n    activityAnimationItem: 'ft-activity-animation-item',\n    messageContainer: 'ft-activity-message'\n  };\n\n  /**\n   * Will contain the activityOverlay Element for this targetContainer\n   * @type {Element}\n   */\n  let activityOverlay;\n\n  /**\n   * Will contain the message Element for this targetContainer's activityOverlay\n   * @type {Element}\n   */\n  let messageContainer;\n\n  /**\n   * Will contain the animation container Element for this targetContainer's activityOverlay\n   * @type {Element}\n   */\n  let activityContainer;\n\n  /**\n   * Control Methods\n   */\n\n  /**\n   * This shows the overlay's activity animation that was created at instantiation\n   * Must be manually hidden with the hide() method\n   *\n   * @return {void}\n   */\n  this.showActivity = () => {\n    this.setActivityActive();\n    this.setOverlayVisible();\n  };\n\n  /**\n   * Shows a message in the overlay (neutral background)\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {void}\n   */\n  this.showMessage = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5000;\n    _this.setMessageContent(message);\n    _this.setActivityInactive();\n    _this.setMessageActive();\n    _this.setOverlayVisible();\n    _this.hide(displayTime);\n  };\n\n  /**\n   * Shows a success message (success color background)\n   *\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {[type]}             [description]\n   */\n  this.flashSuccess = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    _this.setSuccessActive();\n    _this.setFlashActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Shows a success message (error color background)\n   *\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {[type]}             [description]\n   */\n  this.flashError = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    _this.setFlashActive();\n    _this.setErrorActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Shows an error message in a visible overlay (error background)\n   *\n   * @param  {String} message     Message to show in overlay error\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {void}\n   */\n  this.showError = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 7000;\n    _this.setErrorActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Hide an overlay immediately or after a preset amount of time\n   *\n   * @param {Number} delay Length of time in ms before hiding overlay\n   */\n  this.hide = function () {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    setTimeout(() => {\n      _this.setOverlayInvisible();\n    }, delay);\n\n    // Ensures the animation is finished before modifying content\n    setTimeout(() => {\n      _this.setActivityInactive();\n      _this.setMessageInactive();\n      _this.setErrorInactive();\n      _this.setFlashInactive();\n      _this.setMessageContent('');\n    }, delay + 500);\n  };\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Shows the activity element\n   *\n   * @access Private\n   */\n  this.setActivityActive = () => {\n    activityOverlay.classList.add(elClasses.activity);\n  };\n\n  /**\n   * Hides the activity element\n   *\n   * @access Private\n   */\n  this.setActivityInactive = () => {\n    activityOverlay.classList.remove(elClasses.activity);\n  };\n\n  /**\n   * Shows the message element\n   *\n   * @access Private\n   */\n  this.setMessageActive = () => {\n    activityOverlay.classList.add(elClasses.message);\n  };\n\n  /**\n   * Hides the activity element\n   *\n   * @access Private\n   */\n  this.setMessageInactive = () => {\n    activityOverlay.classList.remove(elClasses.message);\n  };\n\n  /**\n   * Sets the content of the overlay message\n   *\n   * @access Private\n   */\n  this.setMessageContent = content => {\n    messageContainer.innerText = content;\n  };\n\n  /**\n   * Adds flashing overlay behavior\n   *\n   * @access Private\n   */\n  this.setFlashActive = content => {\n    activityOverlay.classList.add(elClasses.flash);\n  };\n\n  /**\n   * removes flashing overlay behavior\n   *\n   * @access Private\n   */\n  this.setFlashInactive = content => {\n    activityOverlay.classList.remove(elClasses.flash);\n  };\n\n  /**\n   * Sets message to success\n   *\n   * @access Private\n   */\n  this.setSuccessActive = () => {\n    activityOverlay.classList.add(elClasses.success);\n  };\n\n  /**\n   * Unsets message error\n   *\n   * @access Private\n   */\n  this.setSuccessInactive = () => {\n    activityOverlay.classList.remove(elClasses.success);\n  };\n\n  /**\n   * Sets message to error\n   *\n   * @access Private\n   */\n  this.setErrorActive = () => {\n    activityOverlay.classList.add(elClasses.error);\n  };\n\n  /**\n   * Unsets message error\n   *\n   * @access Private\n   */\n  this.setErrorInactive = () => {\n    activityOverlay.classList.remove(elClasses.error);\n  };\n\n  /**\n   * Shows this activity overlay\n   *\n   * @access Private\n   */\n  this.setOverlayVisible = () => {\n    activityOverlay.classList.add(elClasses.visible);\n  };\n  this.setOverlayInvisible = () => {\n    activityOverlay.classList.remove(elClasses.visible);\n  };\n\n  /**\n   * Creates and returns an activity overlay element\n   *\n   * @return {HTMLElement}\n   */\n  this.create = () => {\n    activityOverlay = this.buildOverlayEl();\n    activityContainer = this.buildActivityEl();\n    messageContainer = this.buildMessageEl();\n    activityOverlay.appendChild(activityContainer);\n    activityOverlay.appendChild(messageContainer);\n    return activityOverlay;\n  };\n\n  /**\n   * Creates the parent overlay element\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildOverlayEl = () => {\n    const overlay = document.createElement('div');\n\n    // overlay.setAttribute('data-gradient-1', 'rgba(62, 185, 152, .85)');\n    overlay.setAttribute('class', elClasses.overlay);\n    return overlay;\n  };\n\n  /**\n   * Creates container for animation and contents of animation\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildActivityEl = () => {\n    let text = this.getActivityTexts();\n    let activityAnimationContainer = document.createElement('div');\n    activityAnimationContainer.setAttribute('class', elClasses.activityAnimationContainer);\n\n    // Add all animation items to the animation container\n    activityAnimationContainer = text.animated.reduce((el, string) => {\n      let activityText = document.createElement('span');\n\n      // Add text items\n      activityText.setAttribute('class', elClasses.activityAnimationItem);\n      activityText.innerHTML = string;\n      el.appendChild(activityText);\n      return el;\n    }, activityAnimationContainer);\n\n    // Create static text element\n    let staticText = document.createElement('div');\n    staticText.setAttribute('class', elClasses.activityStaticText);\n    staticText.innerText = text.static;\n\n    // Create activity container and append children\n    activityContainer = document.createElement('div');\n    activityContainer.setAttribute('class', elClasses.activityContainer);\n    activityContainer.appendChild(staticText);\n    activityContainer.appendChild(activityAnimationContainer);\n    return activityContainer;\n  };\n\n  /**\n   * Gets activity overlay texts and shuffles the animated array\n   * No purpose really other than to add some uniqueness to overlay animations and prevent looking\n   * like one language was preferred by me over another.\n   *\n   * Fisher-Yates algorithm, for the curious\n   *\n   * @return {Array} Randomized array of the activity animation texts for this instance\n   * @access Private\n   */\n  this.getActivityTexts = () => {\n    let uiTexts = _FtConfig.default.getUiTextFor('activityOverlay')[activityType];\n    let animationTexts = uiTexts.animated;\n    for (let i = animationTexts.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = animationTexts[i];\n      animationTexts[i] = animationTexts[j];\n      animationTexts[j] = temp;\n    }\n    uiTexts.animated = animationTexts;\n    return uiTexts;\n  };\n\n  /**\n   * Builds the element that will hold messages in the overlay\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildMessageEl = () => {\n    messageContainer = document.createElement('div');\n    messageContainer.setAttribute('class', elClasses.messageContainer);\n    return messageContainer;\n  };\n  (() => {\n    const targetContainerContainer = targetContainer.getSelf();\n    activityOverlay = this.create();\n    targetContainerContainer.classList.add(elClasses.parent);\n    targetContainerContainer.appendChild(activityOverlay);\n  })();\n};\nvar _default = FtActivityOverlay;\nexports.default = _default;\n\n},{\"../global/FtConfig\":3}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtConfig = _interopRequireDefault(require(\"../global/FtConfig\"));\nvar _Fluency = _interopRequireDefault(require(\"../global/Fluency\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Creates common HTML elements\n *\n * @return {Object} Public methods\n */\nconst FtUiElements = function () {\n  /**\n   * @type {Object}\n   */\n  const elementClasses = _FtConfig.default.elementClasses;\n\n  /**\n   * Gets all localized strings from the FluencyConfig object\n   * These do nothing on their own and must be bound with any behavior after creation\n   *\n   * @type {object}\n   */\n  const uiText = _FtConfig.default.getUiTextFor('inputfieldTranslateButtons');\n\n  /**\n   * Creates a language fontawesome icon element\n   *\n   * @return {Element}\n   */\n  const createIcon = () => {\n    const iconLink = document.createElement('a');\n    iconLink.setAttribute('href', `${ProcessWire.config.urls.admin}fluency/?modal=1`);\n    iconLink.setAttribute('class', 'pw-modal pw-modal-large');\n    const icon = document.createElement('i');\n    icon.setAttribute('class', `${_FtConfig.default.getElementClassesFor('icon')} fa fa-language`);\n    icon.setAttribute('uk-tooltip', uiText.showTranslator);\n    iconLink.appendChild(icon);\n    return iconLink;\n  };\n\n  /**\n   * Creates a status placeholder\n   *\n   * @return {Element}\n   */\n  const createStatusElement = text => {\n    const elClasses = _FtConfig.default.getElementClassesFor('statusPlaceholder');\n    const label = document.createElement('span');\n    label.setAttribute('class', elClasses.label);\n    label.innerText = text;\n    const container = document.createElement('div');\n    container.setAttribute('class', elClasses.container);\n    container.appendChild(createIcon());\n    container.appendChild(label);\n    return container;\n  };\n\n  /**\n   * Creates a translate button element\n   *\n   * @return {Object} Container element and Button element\n   */\n  const createTranslateButton = text => {\n    const elClasses = _FtConfig.default.getElementClassesFor('translateButton');\n    const button = document.createElement('a');\n    button.innerText = text;\n    button.setAttribute('class', elClasses.button);\n    button.setAttribute('href', '');\n    const container = document.createElement('div');\n    container.setAttribute('class', elClasses.container);\n    container.appendChild(createIcon());\n    container.appendChild(button);\n    return {\n      button,\n      container\n    };\n  };\n  const createTranslateAllButton = text => {\n    const elClasses = _FtConfig.default.getElementClassesFor('translateAllButton');\n    const button = document.createElement('a');\n    button.innerText = _FtConfig.default.getUiTextFor('languageTranslator').translateAllButton;\n    button.setAttribute('class', elClasses.button);\n    button.setAttribute('href', '');\n    const content = document.createElement('div');\n    content.setAttribute('class', elClasses.content);\n    content.appendChild(button);\n    const container = document.createElement('li');\n    container.setAttribute('class', elClasses.container);\n    container.appendChild(content);\n    return {\n      button,\n      container\n    };\n  };\n  return {\n    createStatusElement,\n    createTranslateButton,\n    createTranslateAllButton,\n    createIcon,\n    elementClasses\n  };\n}();\nvar _default = FtUiElements;\nexports.default = _default;\n\n},{\"../global/Fluency\":2,\"../global/FtConfig\":3}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_FtLanguageTranslatorInputfields","_interopRequireDefault","_FtConfig","obj","__esModule","default","window","addEventListener","moduleShouldInitialize","init","./global/FtConfig","./inputfields/FtLanguageTranslatorInputfields","2","Object","defineProperty","value","Fluency","errors","getUiTextFor","requestHeaders","requestType","X-Requested-With","getRequest","endpoint","responseHandler","fetch","method","cache","headers","then","parseResponse","catch","handleFetchError","deleteRequest","response","status","ok","json","error","console","message","returnObject","split","deleteTranslatableLanguagesCache","getApiEndpointFor","deleteTranslationCache","getAvailableLanguages","getTranslation","sourceLanguage","targetLanguage","content","let","options","arguments","undefined","caching","data","body","JSON","stringify","getUsage","./FtConfig","3","FtConfig","config","ProcessWire","fluency","localizedStrings","localization","elementClasses","translateButton","container","button","translateAllButton","statusPlaceholder","label","icon","strings","activityOverlay","languageSelect","inputfieldTranslateButtons","standaloneTranslator","usage","languageTranslator","endpoints","languages","apiEndpoints","translatableLanguagesCache","test","translation","translationCache","configuredLanguages","unconfiguredLanguages","getConfiguredLanguages","getUnconfiguredLanguages","getEngineInfo","engine","fieldInitializedAttr","key","getDefaultLanguage","reduce","defaultLang","lang","getElementClassesFor","element","getEngineProvidesUsageData","providesUsageData","getLanguageCount","getLanguageForId","pwLanguageId","parseInt","match","language","id","getTranslationAction","interface","inputfieldTranslationAction","getTranslationDisabledFieldAttribute","translationDisabledFieldAttr","languageIsTranslatable","languageId","includes","translationActionTypes","each","all","both","4","_FtActivityOverlay","_FtUiElements","_Fluency","AllInputfieldTranslator","inputfields","sourceTargetMap","this","getSelf","getActivityOverlay","addTranslateButton","createTranslateAllButton","bindTranslateButton","document","querySelector","insertAdjacentElement","preventDefault","translateContent","getGroupedContentForTranslation","chunks","item","index","chunkIndex","Math","floor","push","translationGroups","showActivity","groupsToTranslate","urlParams","URLSearchParams","location","search","get","errorOccurred","forEach","translationGroup","engineLanguage","sourceCode","targetCode","map","sourceTarget","text","result","showError","translations","input","hide","mapSourceTargetElements","querySelectorAll","inputfield","description","targetInput","innerText","LanguageTranslatorInputfield","inputfieldContainer","uiText","sourceText","createTranslateButton","translate","appendChild","initFields","translationInputfields","initTranslateAllButton","../global/Fluency","../global/FtConfig","../ui/FtActivityOverlay","../ui/FtUiElements","5","targetContainer","_this","activityType","elClasses","parent","overlay","flash","success","activity","visible","activityContainer","activityStaticText","activityAnimationContainer","activityAnimationItem","messageContainer","setActivityActive","setOverlayVisible","showMessage","displayTime","setMessageContent","setActivityInactive","setMessageActive","flashSuccess","setSuccessActive","setFlashActive","flashError","setErrorActive","delay","setTimeout","setOverlayInvisible","setMessageInactive","setErrorInactive","setFlashInactive","classList","add","remove","setSuccessInactive","create","buildOverlayEl","buildActivityEl","buildMessageEl","createElement","setAttribute","getActivityTexts","animated","el","string","activityText","innerHTML","staticText","static","uiTexts","animationTexts","j","random","temp","targetContainerContainer","6","FtUiElements","createIcon","iconLink","urls","admin","showTranslator","createStatusElement"],"mappings":"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"}