{"version":3,"file":"../fluency_api_usage.bundle.js","sources":["fluency_api_usage.bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Fluency = _interopRequireDefault(require(\"../global/Fluency\"));\nvar _FtConfig = _interopRequireDefault(require(\"../global/FtConfig\"));\nvar _FtActivityOverlay = _interopRequireDefault(require(\"../ui/FtActivityOverlay\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Primary initialization object\n * This initializes all tables available in markup in the event there are multiple but some not\n * visible\n *\n * @return {Object} Public methods\n */\nconst FtApiUsageTableFieldset = function () {\n  /**\n   * Attribute present on initialized instances\n   * @type {String}\n   */\n  const initializedAttr = 'data-ft-initialized';\n\n  /**\n   * Initialize all API usage tables on page\n   *\n   * @return {void}\n   */\n  const init = () => {\n    if (!_FtConfig.default.getEngineProvidesUsageData()) {\n      return;\n    }\n    const translationApiUsageTables = document.querySelectorAll(`.ft-api-usage-table-fieldset:not([${initializedAttr}])`);\n    [...translationApiUsageTables].forEach(el => {\n      new initializeApiUsageTableFieldset(el);\n    });\n  };\n  return {\n    init,\n    initializedAttr\n  };\n}();\n\n/**\n * Creates a bound object for an API Usage Table\n * @param  {Element} fieldset Fieldset that contains all of the API Usage Table Element\n * @return {void}\n */\nconst initializeApiUsageTableFieldset = function (fieldset) {\n  /**\n   * Contains the activityOverlay\n   * @type {Object}\n   */\n  let activityOverlay;\n\n  /**\n   * Values are classes that will be replaced with their associated HTML element on initialization\n   * @type {Object}\n   */\n  const usageTableElements = {\n    unit: 'ft-usage-unit',\n    limit: 'ft-usage-limit',\n    used: 'ft-usage-used',\n    remaining: 'ft-usage-remaining',\n    total: 'ft-usage-total',\n    refreshButton: 'js-ft-refresh-usage'\n  };\n  this.getSelf = () => fieldset;\n\n  /**\n   * Updates translation API usage table with data from API\n   * @return {Void}\n   */\n  this.updateView = () => {\n    activityOverlay.showActivity();\n    _Fluency.default.getUsage().then(result => {\n      if (result.error) {\n        activityOverlay.showError(result.message);\n        return;\n      }\n      usageTableElements.unit.innerText = result.unit;\n      usageTableElements.limit.innerText = result.limit;\n      usageTableElements.remaining.innerText = result.remaining;\n      usageTableElements.used.innerText = result.used;\n      usageTableElements.total.innerText = result.percentUsed;\n      activityOverlay.hide();\n    });\n  };\n\n  /**\n   * Binds behavior to refresh button\n   * @return {void}\n   */\n  this.bindRefreshButton = () => {\n    usageTableElements.refreshButton.addEventListener('click', e => {\n      e.preventDefault();\n      this.updateView();\n    });\n  };\n  (() => {\n    for (let [elType, className] of Object.entries(usageTableElements)) {\n      usageTableElements[elType] = fieldset.querySelector(`.${className}`);\n    }\n    activityOverlay = new _FtActivityOverlay.default(this, 'refreshing');\n    this.bindRefreshButton();\n    fieldset.setAttribute(FtApiUsageTableFieldset.initializedAttr, true);\n  })();\n};\nvar _default = FtApiUsageTableFieldset;\nexports.default = _default;\n\n},{\"../global/Fluency\":3,\"../global/FtConfig\":4,\"../ui/FtActivityOverlay\":5}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _FtApiUsageTableFieldset = _interopRequireDefault(require(\"./components/FtApiUsageTableFieldset\"));\nvar _FtConfig = _interopRequireDefault(require(\"./global/FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nwindow.addEventListener('load', e => {\n  if (_FtConfig.default.getEngineProvidesUsageData()) {\n    _FtApiUsageTableFieldset.default.init();\n  }\n});\n\n},{\"./components/FtApiUsageTableFieldset\":1,\"./global/FtConfig\":4}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtConfig = _interopRequireDefault(require(\"./FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Core module interface\n * Handles all interaction with the ProcessWire module backend\n * @return {object} Public interfaces\n */\n\nconst Fluency = function () {\n  /**\n   * Localized error strings\n   * @type {Object}\n   */\n  const errors = _FtConfig.default.getUiTextFor('errors');\n\n  /**\n   * Data Request Methods\n   */\n\n  /**\n   * Gets a translation from the Fluency module\n   * @param  {String}       sourceLanguage ISO language code\n   * @param  {String}       targetLanguage ISO langauge code\n   * @param  {String|Array} content        Content to translate\n   * @param  {Array}        options        Additional options\n   * @param  {Bool|null}         caching        Enable/disable caching\n   * @return {Promise}\n   */\n  const getTranslation = function (sourceLanguage, targetLanguage, content) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let caching = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    return postRequest(_FtConfig.default.getApiEndpointFor('translation'), {\n      sourceLanguage: sourceLanguage,\n      targetLanguage: targetLanguage,\n      content: content,\n      options: options,\n      caching: caching\n    }, response => {\n      return response;\n    });\n  };\n\n  /**\n   * Gets the current translation service API usage\n   * @return {Promise}\n   */\n  const getUsage = () => {\n    return getRequest(_FtConfig.default.getApiEndpointFor('usage'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Get all language available for translation. Provides source/target lists from the translation\n   * service API\n   * @return {Promise}\n   */\n  const getAvailableLanguages = () => {\n    return getRequest(_FtConfig.default.getApiEndpointFor('languages'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Clear all cached translations\n   * @return {Promise}\n   */\n  const deleteTranslationCache = () => {\n    return deleteRequest(_FtConfig.default.getApiEndpointFor('translationCache'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * Clear cached list of translatable languages\n   * @return {Promise}\n   */\n  const deleteTranslatableLanguagesCache = () => {\n    return deleteRequest(_FtConfig.default.getApiEndpointFor('translatableLanguagesCache'), response => {\n      return response;\n    });\n  };\n\n  /**\n   * HTTP Requests\n   */\n\n  /**\n   * Create headers for AJAX requests\n   * @return {Object}\n   */\n  const requestHeaders = requestType => {\n    const requestHeaders = {\n      'X-Requested-With': 'XMLHttpRequest'\n    };\n    if (requestType === 'GET') {\n      requestHeaders['Accept'] = 'application/json';\n    }\n    if (requestType === 'POST') {\n      requestHeaders['Content-Type'] = 'application/json';\n    }\n    return requestHeaders;\n  };\n\n  /**\n   * Executes a POST request to a given endpoint\n   * @param  {String}    endpoint URL for AJAX request\n   * @param  {Object}    data     Data for request\n   * @param  {Callable}  data     Function to handle response body\n   * @return {Promise}\n   */\n  const postRequest = (endpoint, data, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'POST',\n      cache: 'no-store',\n      headers: requestHeaders,\n      body: JSON.stringify(data)\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Executes a GET request to a given endpoint\n   * @param  {String}   endpoint        URL for AJAX request\n   * @param  {Callable} responseHandler Function to handle response body\n   * @return {Promise}\n   */\n  const getRequest = (endpoint, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: requestHeaders('GET')\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Executes a DELETE request to a given endpoint\n   * @param  {String}   endpoint        URL for AJAX request\n   * @param  {Callable} responseHandler Function to handle response body\n   * @return {Promise}\n   */\n  const deleteRequest = (endpoint, responseHandler) => {\n    return fetch(endpoint, {\n      method: 'DELETE',\n      headers: requestHeaders('GET')\n    }).then(parseResponse).then(responseHandler).catch(handleFetchError);\n  };\n\n  /**\n   * Parses response\n   * @param  {Object} response Fluency API response\n   * @return {Object|Void}\n   * @throws Error\n   */\n  const parseResponse = response => {\n    if (response.status === 204) {\n      return response;\n    }\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error();\n  };\n\n  /**\n   * Parses and returns results for a fetch error\n   * These are network level errors that occur between ProcessWire and the hosting server\n   * Any translation or service errors will be located within the response body itself\n   * @param  {Error} error Fetch API error object\n   * @return {Object}\n   */\n  const handleFetchError = error => {\n    console.error('[Fluency module API failure]', error.message);\n    const returnObject = {\n      error: null,\n      message: null\n    };\n    switch (error.message.split(' ')[0]) {\n      case 'NetworkError':\n        returnObject.error = 'FLUENCY_CLIENT_DISCONNECTED';\n        returnObject.message = errors['FLUENCY_CLIENT_DISCONNECTED'];\n        break;\n      default:\n        returnObject.error = 'UNKNOWN_ERROR';\n        returnObject.message = errors['UNKNOWN_ERROR'];\n        break;\n    }\n    return returnObject;\n  };\n  return {\n    deleteTranslatableLanguagesCache,\n    deleteTranslationCache,\n    getAvailableLanguages,\n    getTranslation,\n    getUsage\n  };\n}();\nvar _default = Fluency;\nexports.default = _default;\n\n},{\"./FtConfig\":4}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/**\n * This provides access methods to get module configuration values\n * @return {Object}  Public methods\n */\nconst FtConfig = function () {\n  // Public properties\n\n  const fieldInitializedAttr = 'data-ft-initialized';\n\n  // Private properties\n\n  /**\n   * Holds the data passed from the Fluency module\n   * @access Private\n   * @type {Object}\n   */\n  const config = ProcessWire.config.fluency;\n\n  /**\n   * All UI strings\n   * @type {Object}\n   */\n  const localizedStrings = config.localization;\n\n  /**\n   * Objects interface with the Fluency config object so that changes to the object\n   * structure from the back end do not break the UI. Use the public methods below\n   * to access ProcessWire.config.fluency properties and data\n   */\n\n  /**\n   * Localized strings keyed sets\n   * @type {Object}\n   */\n  const strings = {\n    activityOverlay: localizedStrings.activityOverlay,\n    languageSelect: localizedStrings.languageSelect,\n    inputfieldTranslateButtons: localizedStrings.inputfieldTranslateButtons,\n    standaloneTranslator: localizedStrings.standaloneTranslator,\n    usage: localizedStrings.usage,\n    errors: localizedStrings.errors\n  };\n\n  /**\n   * Fluency API keyed URLs\n   * @type {Object}\n   */\n  const endpoints = {\n    languages: config.apiEndpoints.languages,\n    translatableLanguagesCache: config.apiEndpoints.translatableLanguagesCache,\n    test: config.apiEndpoints.test,\n    translation: config.apiEndpoints.translation,\n    translationCache: config.apiEndpoints.translationCache,\n    usage: config.apiEndpoints.usage\n  };\n\n  /**\n   * Contains all of the Fluency configured langauges from the module\n   * @type {Array}\n   */\n  const configuredLanguages = config.configuredLanguages;\n\n  /**\n   * Contains an array of ProcessWire language IDs not configured in Fluency\n   * @type {Array}\n   */\n  const unconfiguredLanguages = config.unconfiguredLanguages;\n\n  // Public methods\n\n  /**\n   * Fluency REST API\n   */\n  const getApiEndpointFor = key => endpoints[key];\n\n  /**\n   * Languages\n   */\n\n  const getConfiguredLanguages = () => configuredLanguages;\n  const getDefaultLanguage = () => getConfiguredLanguages().reduce((defaultLang, lang) => lang.default ? lang : defaultLang, null);\n  const languageIsTranslatable = languageId => !getUnconfiguredLanguages().includes(parseInt(languageId, 10));\n  const getUnconfiguredLanguages = () => unconfiguredLanguages;\n  const getLanguageCount = () => getConfiguredLanguages().length + getUnconfiguredLanguages().length;\n  const getLanguageForId = pwLanguageId => {\n    pwLanguageId = parseInt(pwLanguageId, 10);\n    return getConfiguredLanguages().reduce((match, language) => language.id === pwLanguageId ? language : match, null);\n  };\n\n  /**\n   * Localization\n   */\n\n  const getUiTextFor = key => strings[key];\n\n  /**\n   * Module Configuration/State\n   */\n\n  const moduleShouldInitialize = () => getConfiguredLanguages().length > 1;\n  const getEngineInfo = () => config.engine;\n  const getEngineProvidesUsageData = () => getEngineInfo().providesUsageData;\n  return {\n    fieldInitializedAttr,\n    getApiEndpointFor,\n    getConfiguredLanguages,\n    getDefaultLanguage,\n    getEngineInfo,\n    getEngineProvidesUsageData,\n    getLanguageCount,\n    getLanguageForId,\n    getUiTextFor,\n    getUnconfiguredLanguages,\n    languageIsTranslatable,\n    moduleShouldInitialize\n  };\n}();\nvar _default = FtConfig;\nexports.default = _default;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FtConfig = _interopRequireDefault(require(\"../global/FtConfig\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Creates, inserts, and controls the actions the activity overlay for the provided\n * targetContainer\n * @param {object} targetContainer An instantiated object for an inputfield or fieldset\n * @param {string} type       The type of activity for this overlay. 'translate' or 'update'\n */\nconst FtActivityOverlay = function (targetContainer) {\n  var _this = this;\n  let activityType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'translating';\n  const elClasses = {\n    parent: 'ft-activity-overlay-container',\n    overlay: 'ft-activity-overlay',\n    error: 'error',\n    message: 'message',\n    flash: 'flash',\n    success: 'success',\n    activity: 'activity',\n    visible: 'visible',\n    activityContainer: 'ft-activity',\n    activityStaticText: 'ft-activity-text',\n    activityAnimationContainer: 'ft-activity-animation-container',\n    activityAnimationItem: 'ft-activity-animation-item',\n    messageContainer: 'ft-activity-message'\n  };\n\n  /**\n   * Will contain the activityOverlay Element for this targetContainer\n   * @type {Element}\n   */\n  let activityOverlay;\n\n  /**\n   * Will contain the message Element for this targetContainer's activityOverlay\n   * @type {Element}\n   */\n  let messageContainer;\n\n  /**\n   * Will contain the animation container Element for this targetContainer's activityOverlay\n   * @type {Element}\n   */\n  let activityContainer;\n\n  /**\n   * Control Methods\n   */\n\n  /**\n   * This shows the overlay's activity animation that was created at instantiation\n   * Must be manually hidden with the hide() method\n   *\n   * @return {void}\n   */\n  this.showActivity = () => {\n    this.setActivityActive();\n    this.setOverlayVisible();\n  };\n\n  /**\n   * Shows a message in the overlay (neutral background)\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {void}\n   */\n  this.showMessage = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5000;\n    _this.setMessageContent(message);\n    _this.setActivityInactive();\n    _this.setMessageActive();\n    _this.setOverlayVisible();\n    _this.hide(displayTime);\n  };\n\n  /**\n   * Shows a success message (success color background)\n   *\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {[type]}             [description]\n   */\n  this.flashSuccess = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    _this.setSuccessActive();\n    _this.setFlashActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Shows a success message (error color background)\n   *\n   * @param  {String} message     Text to display\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {[type]}             [description]\n   */\n  this.flashError = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    _this.setFlashActive();\n    _this.setErrorActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Shows an error message in a visible overlay (error background)\n   *\n   * @param  {String} message     Message to show in overlay error\n   * @param  {Number} displayTime Length of time in ms before hiding overlay after shown\n   * @return {void}\n   */\n  this.showError = function (message) {\n    let displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 7000;\n    _this.setErrorActive();\n    _this.showMessage(message, displayTime);\n  };\n\n  /**\n   * Hide an overlay immediately or after a preset amount of time\n   *\n   * @param {Number} delay Length of time in ms before hiding overlay\n   */\n  this.hide = function () {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    setTimeout(() => {\n      _this.setOverlayInvisible();\n    }, delay);\n\n    // Ensures the animation is finished before modifying content\n    setTimeout(() => {\n      _this.setActivityInactive();\n      _this.setMessageInactive();\n      _this.setErrorInactive();\n      _this.setFlashInactive();\n      _this.setMessageContent('');\n    }, delay + 500);\n  };\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Shows the activity element\n   *\n   * @access Private\n   */\n  this.setActivityActive = () => {\n    activityOverlay.classList.add(elClasses.activity);\n  };\n\n  /**\n   * Hides the activity element\n   *\n   * @access Private\n   */\n  this.setActivityInactive = () => {\n    activityOverlay.classList.remove(elClasses.activity);\n  };\n\n  /**\n   * Shows the message element\n   *\n   * @access Private\n   */\n  this.setMessageActive = () => {\n    activityOverlay.classList.add(elClasses.message);\n  };\n\n  /**\n   * Hides the activity element\n   *\n   * @access Private\n   */\n  this.setMessageInactive = () => {\n    activityOverlay.classList.remove(elClasses.message);\n  };\n\n  /**\n   * Sets the content of the overlay message\n   *\n   * @access Private\n   */\n  this.setMessageContent = content => {\n    messageContainer.innerText = content;\n  };\n\n  /**\n   * Adds flashing overlay behavior\n   *\n   * @access Private\n   */\n  this.setFlashActive = content => {\n    activityOverlay.classList.add(elClasses.flash);\n  };\n\n  /**\n   * removes flashing overlay behavior\n   *\n   * @access Private\n   */\n  this.setFlashInactive = content => {\n    activityOverlay.classList.remove(elClasses.flash);\n  };\n\n  /**\n   * Sets message to success\n   *\n   * @access Private\n   */\n  this.setSuccessActive = () => {\n    activityOverlay.classList.add(elClasses.success);\n  };\n\n  /**\n   * Unsets message error\n   *\n   * @access Private\n   */\n  this.setSuccessInactive = () => {\n    activityOverlay.classList.remove(elClasses.success);\n  };\n\n  /**\n   * Sets message to error\n   *\n   * @access Private\n   */\n  this.setErrorActive = () => {\n    activityOverlay.classList.add(elClasses.error);\n  };\n\n  /**\n   * Unsets message error\n   *\n   * @access Private\n   */\n  this.setErrorInactive = () => {\n    activityOverlay.classList.remove(elClasses.error);\n  };\n\n  /**\n   * Shows this activity overlay\n   *\n   * @access Private\n   */\n  this.setOverlayVisible = () => {\n    activityOverlay.classList.add(elClasses.visible);\n  };\n  this.setOverlayInvisible = () => {\n    activityOverlay.classList.remove(elClasses.visible);\n  };\n\n  /**\n   * Creates and returns an activity overlay element\n   *\n   * @return {HTMLElement}\n   */\n  this.create = () => {\n    activityOverlay = this.buildOverlayEl();\n    activityContainer = this.buildActivityEl();\n    messageContainer = this.buildMessageEl();\n    activityOverlay.appendChild(activityContainer);\n    activityOverlay.appendChild(messageContainer);\n    return activityOverlay;\n  };\n\n  /**\n   * Creates the parent overlay element\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildOverlayEl = () => {\n    const overlay = document.createElement('div');\n\n    // overlay.setAttribute('data-gradient-1', 'rgba(62, 185, 152, .85)');\n    overlay.setAttribute('class', elClasses.overlay);\n    return overlay;\n  };\n\n  /**\n   * Creates container for animation and contents of animation\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildActivityEl = () => {\n    let text = _FtConfig.default.getUiTextFor('activityOverlay')[activityType];\n    let activityAnimationContainer = document.createElement('div');\n    activityAnimationContainer.setAttribute('class', elClasses.activityAnimationContainer);\n\n    // Add all animation items to the animation container\n    activityAnimationContainer = text.animated.reduce((el, string) => {\n      let activityText = document.createElement('span');\n\n      // Add text items\n      activityText.setAttribute('class', elClasses.activityAnimationItem);\n      activityText.innerHTML = string;\n      el.appendChild(activityText);\n      return el;\n    }, activityAnimationContainer);\n\n    // Create static text element\n    let staticText = document.createElement('div');\n    staticText.setAttribute('class', elClasses.activityStaticText);\n    staticText.innerText = text.static;\n\n    // Create activity container and append children\n    activityContainer = document.createElement('div');\n    activityContainer.setAttribute('class', elClasses.activityContainer);\n    activityContainer.appendChild(staticText);\n    activityContainer.appendChild(activityAnimationContainer);\n    return activityContainer;\n  };\n\n  /**\n   * Builds the element that will hold messages in the overlay\n   *\n   * @return {Element}\n   * @access Private\n   */\n  this.buildMessageEl = () => {\n    messageContainer = document.createElement('div');\n    messageContainer.setAttribute('class', elClasses.messageContainer);\n    return messageContainer;\n  };\n  (() => {\n    const targetContainerContainer = targetContainer.getSelf();\n    activityOverlay = this.create();\n    targetContainerContainer.classList.add(elClasses.parent);\n    targetContainerContainer.appendChild(activityOverlay);\n  })();\n};\nvar _default = FtActivityOverlay;\nexports.default = _default;\n\n},{\"../global/FtConfig\":4}]},{},[2]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","default","_Fluency","_interopRequireDefault","_FtConfig","_FtActivityOverlay","obj","__esModule","FtApiUsageTableFieldset","initializedAttr","init","getEngineProvidesUsageData","document","querySelectorAll","forEach","el","initializeApiUsageTableFieldset","fieldset","let","activityOverlay","usageTableElements","unit","limit","used","remaining","total","refreshButton","this","getSelf","updateView","showActivity","getUsage","then","result","error","showError","message","innerText","percentUsed","hide","bindRefreshButton","addEventListener","preventDefault","elType","className","entries","querySelector","setAttribute","_default","../global/Fluency","../global/FtConfig","../ui/FtActivityOverlay","2","_FtApiUsageTableFieldset","window","./components/FtApiUsageTableFieldset","./global/FtConfig","3","Fluency","errors","getUiTextFor","requestHeaders","requestType","X-Requested-With","getRequest","endpoint","responseHandler","fetch","method","cache","headers","parseResponse","catch","handleFetchError","deleteRequest","response","status","ok","json","console","returnObject","split","deleteTranslatableLanguagesCache","getApiEndpointFor","deleteTranslationCache","getAvailableLanguages","getTranslation","sourceLanguage","targetLanguage","content","options","arguments","undefined","caching","data","body","JSON","stringify","./FtConfig","4","FtConfig","config","ProcessWire","fluency","localizedStrings","localization","strings","languageSelect","inputfieldTranslateButtons","standaloneTranslator","usage","endpoints","languages","apiEndpoints","translatableLanguagesCache","test","translation","translationCache","configuredLanguages","unconfiguredLanguages","getConfiguredLanguages","getUnconfiguredLanguages","getEngineInfo","engine","fieldInitializedAttr","key","getDefaultLanguage","reduce","defaultLang","lang","providesUsageData","getLanguageCount","getLanguageForId","pwLanguageId","parseInt","match","language","id","languageIsTranslatable","languageId","includes","moduleShouldInitialize","5","targetContainer","_this","activityType","elClasses","parent","overlay","flash","success","activity","visible","activityContainer","activityStaticText","activityAnimationContainer","activityAnimationItem","messageContainer","setActivityActive","setOverlayVisible","showMessage","displayTime","setMessageContent","setActivityInactive","setMessageActive","flashSuccess","setSuccessActive","setFlashActive","flashError","setErrorActive","delay","setTimeout","setOverlayInvisible","setMessageInactive","setErrorInactive","setFlashInactive","classList","add","remove","setSuccessInactive","create","buildOverlayEl","buildActivityEl","buildMessageEl","appendChild","createElement","text","animated","string","activityText","innerHTML","staticText","static","targetContainerContainer"],"mappings":"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"}